//----------------------------------------------------------------------------

//Модуль обслуживания датчика движения ленты

//----------------------- Используемые ресурсы: ------------------------------

//Используется штатный датчик движения магнитной ленты, реализованный на
//плате правого датчика натяжения. Основой датчика является генератор,
//собранный на транзисторе и имеющий индуктивную обратную связь.
//Катушка обратной связи намотана вместе с контурной катушкой на половинке
//броневого сердечника. В обычных условиях генератор работает, частота
//колебаний составляет около 0.5 МГц. Когда над катушкой генератора
//проходит стальная лопасть крыльчатки обводного ролика, потери в контуре
//генератора резко возрастают, и генерация срывается (в книге Соколова и
//Котова сказано наоборот, хотя в описании Revox A700 все было правильно).
//При вращении крыльчатки на выходе генератора присутствуют
//модулированные колебания, с помощью детектора выделяется их огибающая,
//которая имеет практически прямоугольную форму. Этот сигнал дифференцируется
//и подается на базу транзисторного ключа. При наличии модуляции (т.е. когда
//магнитная лента движется), ключ периодически открывается и поддерживает
//заряженным конденсатор времязадающей цепочки. При этом на выходе датчика
//движения присутствует ВЫСОКИЙ логический уровень. Как только модуляция
//прекращается (магнитная лента останавливается), конденсатор начинает
//разряжаться. Время разрядки определяет интервал, через который после
//остановки ленты на выходе будет сформирован НИЗКИЙ логический уровень.
//В режиме перемотки, когда скорость ленты намного выше, постоянная времени
//может быть уменьшена для более быстрого детектирования остановки движения.
//Для этого имеется специальный контакт разъема "Постоянная времени".
//Он подключен к емкости времязадающей цепочки. Если добавить резистор
//с цепи +5 В на этот контакт, то постоянная времени уменьшится.
//В блоке управления такой резистор подключается через специальный ключ.

//Для работы с датчиком движения используются два порта микроконтроллера.
//Pin_Move - вход, куда подключен выход датчика. НИЗКИЙ уровень - лента
//неподвижна, ВЫСОКИЙ уровень - лента движется.
//Pin_Tmc - выход управления постоянной времени.
//НИЗКИЙ уровень - малая постоянная времени (режим перемотки, MOVE_FAST),
//ВЫСОКИЙ уровень - большая постоянная времени (режим рабочего хода, MOVE_SLOW).

//При использовании электронного счетчика есть смысл отказаться от штатного
//датчика движения ленты. Счетчик определяет движение гораздо быстрее,
//так как использует квадратурный энкодер под крыльчаткой правого обводного
//ролика и реагирует на любое изменение его состояния (для 5-ти лопастей на
//один оборот приходится 20 состояний энкодера). В этом случае нет
//необходимости переключать постоянную времени.

//----------------------------------------------------------------------------

#include "main.hpp"
#include "movesensor.hpp"

//----------------------------------------------------------------------------
//--------------------------- Класс TMoveSensor: -----------------------------
//----------------------------------------------------------------------------

//----------------------------- Конструктор: ---------------------------------

TMoveSensor::TMoveSensor(void)
{
  Pin_Move.DirIn(PIN_PULL);
  Pin_Tmc.DirOut(PIN_HIGH);
}

//---------------------- Установка постоянной времени: -----------------------

void TMoveSensor::SetTC(bool tc)
{
  Pin_Tmc = tc;
}

//----------------------- Чтение постоянной времени: -------------------------

bool TMoveSensor::GetTC(void)
{
  return(Pin_Tmc.GetLatch());
}

//-------------------- Чтение состояния движения ленты: ----------------------

bool TMoveSensor::Move(void)
{
  return(Pin_Move);
}

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
