//----------------------------------------------------------------------------

//Модуль управления ведущим двигателем, заголовочный файл

//----------------------------------------------------------------------------

#ifndef CAPSTAN_HPP
#define CAPSTAN_HPP

//----------------------------------------------------------------------------

#include "systimer.hpp"

//----------------------------- Константы: -----------------------------------

enum CapDir_t
{
  CAP_FWD = 0,
  CAP_REV = 1
};

//----------------------------------------------------------------------------
//---------------------------- Класс TCapstan: -------------------------------
//----------------------------------------------------------------------------

class TCapstan
{
private:
  Pin_Rev_t Pin_Rev;    //выход управления реверсом ведущего двигателя
  TSoftTimer<TT_ONESHOT> *CapTimer; //программный таймер готовности двигателя
  uint16_t CapStart;    //время разгона
  static uint16_t const NOM_CAP_START = 2000; //номинальное время разгона, мс
  bool fRun;            //флаг включения двигателя
  bool fRev;            //флаг реверсирования двигателя
  bool fLock;           //флаг готовности двигателя
public:
  TCapstan(void);
  void Execute(void);
  void Start(bool rev); //запуск двигателя в заданном направлении
  bool Running(void);   //чтение состояния двигателя
  bool Reverse(void);   //чтение направления вращения двигателя
  bool Ready(void);     //чтение готовности двигателя
  void SetTstart(uint16_t t); //задание времени старта
  uint16_t GetTstart(void);   //чтение времени старта
  void EERead(void);    //чтение параметров из EEPROM
  void EESave(void);    //сохранение параметров в EEPROM
};

//----------------------------------------------------------------------------

#endif
